// This file is automatically generated. Do not edit it directly.
// @ts-nocheck
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vwhwufnckpqirxptwncw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ3aHd1Zm5ja3BxaXJ4cHR3bmN3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzkzODI5MjAsImV4cCI6MjA1NDk1ODkyMH0.Wjw8MAnsBrHxB6-J-bNGObgDQ4fl3zPYrgYI5tOrcKo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
    debug: process.env.NODE_ENV === 'development',
    storage: typeof window !== 'undefined' ? window.localStorage : undefined,
    storageKey: 'supabase.auth.token',
    onAuthStateChange: (event, session) => {
      // Auth state değişikliklerini logla
      if (process.env.NODE_ENV === 'development') {
        console.log('Supabase auth state changed:', event, session?.user?.email);
      }
    }
  },
  global: {
    headers: {
      'X-Client-Info': 'ngs-app'
    },
    // Inject latest custom headers on every request
    fetch: (url, options) => {
      try {
        const headers = new Headers(options?.headers || {});
        headers.set('X-Client-Info', 'ngs-app');
        if (typeof window !== 'undefined') {
          const uid = localStorage.getItem('user_id') || '';
          const pid = localStorage.getItem('project_id') || '';
          if (uid) headers.set('X-User-ID', uid);
          if (pid) headers.set('X-Project-ID', pid);
        }
        return fetch(url, { ...options, headers });
      } catch (e) {
        return fetch(url, options as any);
      }
    }
  }
});

// Custom auth için header'ları güncelle
export const updateSupabaseHeaders = (userId?: string, projectId?: string) => {
  if (typeof window !== 'undefined') {
    if (userId) {
      localStorage.setItem('user_id', userId);
    } else {
      localStorage.removeItem('user_id');
    }

    if (projectId) {
      localStorage.setItem('project_id', projectId);
    } else {
      localStorage.removeItem('project_id');
    }

    // Notify listeners that headers changed; fetch interceptor will pick up latest values
    try { window.dispatchEvent(new CustomEvent('supabase-headers-updated')); } catch {}
  }
};