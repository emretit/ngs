{
  "name": "CRM Automation Pipeline",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "crm-automation",
        "options": {}
      },
      "id": "webhook-crm",
      "name": "Webhook - CRM Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [220, 300],
      "webhookId": "crm-automation-trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "qualified-condition",
              "leftValue": "={{ $json.parameters.new_status }}",
              "rightValue": "qualified",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-qualified",
      "name": "If Status = Qualified",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [440, 300]
    },
    {
      "parameters": {
        "url": "https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/proposals",
        "authentication": "generic",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "{{ $vars.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "body": {
          "title": "Proposal for {{ $json.parameters.title }}",
          "opportunity_id": "={{ $json.parameters.opportunity_id }}",
          "customer_id": "={{ $json.parameters.customer_id }}",
          "status": "draft",
          "total_amount": 0,
          "created_at": "={{ $now.toISOString() }}"
        }
      },
      "id": "create-proposal",
      "name": "Create Proposal Draft",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 200]
    },
    {
      "parameters": {
        "url": "https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/tasks",
        "authentication": "generic",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "{{ $vars.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "body": {
          "title": "Review qualified opportunity: {{ $json.parameters.title }}",
          "description": "Analyze and prepare proposal for qualified opportunity",
          "status": "todo",
          "priority": "high",
          "type": "opportunity",
          "due_date": "={{ $now.plus({days: 2}).toISOString() }}",
          "opportunity_id": "={{ $json.parameters.opportunity_id }}",
          "related_item_id": "={{ $json.parameters.opportunity_id }}",
          "related_item_type": "opportunity",
          "related_item_title": "={{ $json.parameters.title }}"
        }
      },
      "id": "create-task",
      "name": "Create Review Task",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 300]
    },
    {
      "parameters": {
        "url": "https://hooks.slack.com/services/{{ $vars.SLACK_WEBHOOK_PATH }}",
        "sendBody": true,
        "contentType": "json",
        "body": {
          "text": "ðŸŽ¯ New Qualified Opportunity!",
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Opportunity:* {{ $json.parameters.title }}\n*Value:* ${{ $json.parameters.value }}\n*Status:* {{ $json.parameters.new_status }}\n*Customer:* {{ $json.parameters.customer_id }}"
              }
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "View Opportunity"
                  },
                  "url": "https://{{ $vars.APP_DOMAIN }}/opportunities/{{ $json.parameters.opportunity_id }}"
                }
              ]
            }
          ]
        }
      },
      "id": "slack-notification",
      "name": "Send Slack Notification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "proposal-sent-condition",
              "leftValue": "={{ $json.parameters.new_status }}",
              "rightValue": "proposal_sent",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-proposal-sent",
      "name": "If Status = Proposal Sent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [440, 600]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * *"
            }
          ]
        }
      },
      "id": "schedule-followup",
      "name": "Schedule 3-Day Follow-up",
      "type": "n8n-nodes-base.schedule",
      "typeVersion": 1.1,
      "position": [660, 500]
    },
    {
      "parameters": {
        "url": "https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/customers?id=eq.{{ $json.parameters.customer_id }}",
        "authentication": "generic",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "{{ $vars.SUPABASE_ANON_KEY }}"
            }
          ]
        }
      },
      "id": "get-customer",
      "name": "Get Customer Info",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 600]
    },
    {
      "parameters": {
        "fromEmail": "{{ $vars.FROM_EMAIL }}",
        "toEmail": "={{ $json[0].email }}",
        "subject": "Follow-up: Your Proposal from {{ $vars.COMPANY_NAME }}",
        "message": "Dear {{ $json[0].name }},\n\nWe wanted to follow up on the proposal we sent regarding {{ $('webhook-crm').item.json.parameters.title }}.\n\nIf you have any questions or would like to discuss the proposal further, please don't hesitate to reach out.\n\nBest regards,\n{{ $vars.COMPANY_NAME }} Team",
        "options": {}
      },
      "id": "send-email",
      "name": "Send Follow-up Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [880, 600]
    }
  ],
  "pinData": {},
  "connections": {
    "webhook-crm": {
      "main": [
        [
          {
            "node": "if-qualified",
            "type": "main",
            "index": 0
          },
          {
            "node": "if-proposal-sent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-qualified": {
      "main": [
        [
          {
            "node": "create-proposal",
            "type": "main",
            "index": 0
          },
          {
            "node": "create-task",
            "type": "main",
            "index": 0
          },
          {
            "node": "slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if-proposal-sent": {
      "main": [
        [
          {
            "node": "schedule-followup",
            "type": "main",
            "index": 0
          },
          {
            "node": "get-customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-customer": {
      "main": [
        [
          {
            "node": "send-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "id": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": []
}