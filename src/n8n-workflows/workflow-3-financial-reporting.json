{
  "name": "Financial Reporting Automation",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * *"
            }
          ]
        }
      },
      "id": "daily-trigger",
      "name": "Daily 8AM Trigger",
      "type": "n8n-nodes-base.schedule",
      "typeVersion": 1.1,
      "position": [220, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "financial-reporting",
        "options": {}
      },
      "id": "webhook-reporting",
      "name": "Webhook - Manual Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [220, 400],
      "webhookId": "financial-reporting-trigger"
    },
    {
      "parameters": {
        "jsCode": "// Set report parameters\nconst reportDate = new Date();\nconst yesterday = new Date(reportDate);\nyesterday.setDate(yesterday.getDate() - 1);\n\nconst startDate = yesterday.toISOString().split('T')[0];\nconst endDate = reportDate.toISOString().split('T')[0];\n\nreturn {\n  reportDate: reportDate.toISOString().split('T')[0],\n  startDate,\n  endDate,\n  reportTitle: `Daily Financial Report - ${reportDate.toLocaleDateString('tr-TR')}`\n};"
      },
      "id": "set-parameters",
      "name": "Set Report Parameters",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [440, 350]
    },
    {
      "parameters": {
        "url": "https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/cashflow_transactions?created_at=gte.{{ $json.startDate }}T00:00:00&created_at=lte.{{ $json.endDate }}T23:59:59&order=created_at.desc",
        "authentication": "generic",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "{{ $vars.SUPABASE_ANON_KEY }}"
            }
          ]
        }
      },
      "id": "get-cashflow",
      "name": "Get Cashflow Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 200]
    },
    {
      "parameters": {
        "url": "https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/einvoices_sent?created_at=gte.{{ $('set-parameters').item.json.startDate }}T00:00:00&created_at=lte.{{ $('set-parameters').item.json.endDate }}T23:59:59",
        "authentication": "generic",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "{{ $vars.SUPABASE_ANON_KEY }}"
            }
          ]
        }
      },
      "id": "get-invoices",
      "name": "Get Invoice Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 300]
    },
    {
      "parameters": {
        "url": "https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/proposals?status=eq.accepted&updated_at=gte.{{ $('set-parameters').item.json.startDate }}T00:00:00&updated_at=lte.{{ $('set-parameters').item.json.endDate }}T23:59:59",
        "authentication": "generic",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "Bearer {{ $vars.SUPABASE_SERVICE_KEY }}"
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "{{ $vars.SUPABASE_ANON_KEY }}"
            }
          ]
        }
      },
      "id": "get-proposals",
      "name": "Get Proposal Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [660, 400]
    },
    {
      "parameters": {
        "jsCode": "// Analyze financial data and create report\nconst cashflowData = $input.first().json || [];\nconst invoiceData = $input.all()[1].json || [];\nconst proposalData = $input.last().json || [];\nconst params = $('set-parameters').item.json;\n\n// Calculate totals\nconst totalIncome = cashflowData\n  .filter(t => t.type === 'income')\n  .reduce((sum, t) => sum + parseFloat(t.amount || 0), 0);\n\nconst totalExpense = cashflowData\n  .filter(t => t.type === 'expense')\n  .reduce((sum, t) => sum + parseFloat(t.amount || 0), 0);\n\nconst totalInvoices = invoiceData\n  .reduce((sum, inv) => sum + parseFloat(inv.total_amount || 0), 0);\n\nconst totalProposals = proposalData\n  .reduce((sum, prop) => sum + parseFloat(prop.total_amount || 0), 0);\n\nconst netCashflow = totalIncome - totalExpense;\n\n// Trend analysis (simplified)\nconst previousDayNet = netCashflow * 0.9; // Mock previous day data\nconst trend = netCashflow > previousDayNet ? 'up' : 'down';\nconst trendPercentage = Math.abs(((netCashflow - previousDayNet) / previousDayNet) * 100).toFixed(2);\n\n// Create report data\nconst reportData = {\n  date: params.reportDate,\n  title: params.reportTitle,\n  summary: {\n    totalIncome: totalIncome.toFixed(2),\n    totalExpense: totalExpense.toFixed(2),\n    netCashflow: netCashflow.toFixed(2),\n    totalInvoices: totalInvoices.toFixed(2),\n    totalProposals: totalProposals.toFixed(2),\n    trend,\n    trendPercentage\n  },\n  details: {\n    cashflowTransactions: cashflowData.length,\n    invoicesSent: invoiceData.length,\n    proposalsAccepted: proposalData.length\n  },\n  insights: [\n    `Daily net cashflow: â‚º${netCashflow.toFixed(2)}`,\n    `Invoice revenue: â‚º${totalInvoices.toFixed(2)}`,\n    `New proposals accepted: ${proposalData.length}`,\n    `Trend: ${trend} ${trendPercentage}% vs. previous day`\n  ]\n};\n\n// Create Excel data structure\nconst excelData = {\n  worksheets: [\n    {\n      name: 'Summary',\n      data: [\n        ['Financial Report', params.reportTitle],\n        ['Date', params.reportDate],\n        [''],\n        ['Metric', 'Amount (â‚º)', 'Count'],\n        ['Total Income', reportData.summary.totalIncome, ''],\n        ['Total Expense', reportData.summary.totalExpense, ''],\n        ['Net Cashflow', reportData.summary.netCashflow, ''],\n        ['Invoices Sent', reportData.summary.totalInvoices, reportData.details.invoicesSent],\n        ['Proposals Accepted', reportData.summary.totalProposals, reportData.details.proposalsAccepted],\n        [''],\n        ['Trend Analysis'],\n        ['Direction', reportData.summary.trend],\n        ['Change %', reportData.summary.trendPercentage + '%']\n      ]\n    },\n    {\n      name: 'Cashflow Details',\n      data: [\n        ['Date', 'Type', 'Amount', 'Description'],\n        ...cashflowData.map(t => [\n          t.date,\n          t.type,\n          t.amount,\n          t.description || ''\n        ])\n      ]\n    }\n  ]\n};\n\nreturn {\n  reportData,\n  excelData,\n  fileName: `Financial_Report_${params.reportDate.replace(/-/g, '')}.xlsx`\n};"
      },
      "id": "analyze-data",
      "name": "Analyze Financial Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [880, 300]
    },
    {
      "parameters": {
        "jsCode": "// Generate Excel file using simple CSV format (n8n has built-in Excel support)\nconst data = $json.excelData;\nconst XLSX = require('xlsx');\n\n// Create workbook\nconst wb = XLSX.utils.book_new();\n\n// Add worksheets\ndata.worksheets.forEach(ws => {\n  const worksheet = XLSX.utils.aoa_to_sheet(ws.data);\n  XLSX.utils.book_append_sheet(wb, worksheet, ws.name);\n});\n\n// Generate buffer\nconst buffer = XLSX.write(wb, { type: 'buffer', bookType: 'xlsx' });\n\nreturn {\n  fileName: $json.fileName,\n  fileData: buffer.toString('base64'),\n  reportData: $json.reportData\n};"
      },
      "id": "generate-excel",
      "name": "Generate Excel Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1100, 300]
    },
    {
      "parameters": {
        "fromEmail": "{{ $vars.FROM_EMAIL }}",
        "toEmail": "{{ $vars.MANAGER_EMAILS }}",
        "subject": "ðŸ“Š {{ $json.reportData.title }}",
        "message": "Daily Financial Report Summary:\n\nðŸ’° Total Income: â‚º{{ $json.reportData.summary.totalIncome }}\nðŸ’¸ Total Expense: â‚º{{ $json.reportData.summary.totalExpense }}\nðŸ“ˆ Net Cashflow: â‚º{{ $json.reportData.summary.netCashflow }}\n\nðŸ“‹ Invoices Sent: {{ $json.reportData.details.invoicesSent }} (â‚º{{ $json.reportData.summary.totalInvoices }})\nâœ… Proposals Accepted: {{ $json.reportData.details.proposalsAccepted }} (â‚º{{ $json.reportData.summary.totalProposals }})\n\nðŸ“Š Trend: {{ $json.reportData.summary.trend }} {{ $json.reportData.summary.trendPercentage }}% vs. previous day\n\nKey Insights:\n{{ $json.reportData.insights.join('\\n') }}\n\nDetailed Excel report is attached.\n\nBest regards,\nAutomated Financial Reporting System",
        "attachments": "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,{{ $json.fileData }}",
        "options": {}\n      },\n      \"id\": \"email-managers\",\n      \"name\": \"Email Report to Managers\",\n      \"type\": \"n8n-nodes-base.emailSend\",\n      \"typeVersion\": 2,\n      \"position\": [1320, 200]\n    },\n    {\n      \"parameters\": {\n        \"url\": \"https://vwhwufnckpqirxptwncw.supabase.co/rest/v1/n8n_workflow_logs\",\n        \"authentication\": \"generic\",\n        \"genericAuthType\": \"httpHeaderAuth\",\n        \"httpHeaderAuth\": {\n          \"name\": \"Authorization\",\n          \"value\": \"Bearer {{ $vars.SUPABASE_SERVICE_KEY }}\"\n        },\n        \"sendHeaders\": true,\n        \"headerParameters\": {\n          \"parameters\": [\n            {\n              \"name\": \"apikey\",\n              \"value\": \"{{ $vars.SUPABASE_ANON_KEY }}\"\n            },\n            {\n              \"name\": \"Content-Type\",\n              \"value\": \"application/json\"\n            }\n          ]\n        },\n        \"sendBody\": true,\n        \"contentType\": \"json\",\n        \"body\": {\n          \"workflow_name\": \"financial_reporting_automation\",\n          \"status\": \"success\",\n          \"result_data\": \"={{ $json.reportData }}\",\n          \"execution_time_ms\": \"={{ $workflow.duration }}\"\n        }\n      },\n      \"id\": \"log-execution\",\n      \"name\": \"Log Workflow Execution\",\n      \"type\": \"n8n-nodes-base.httpRequest\",\n      \"typeVersion\": 4.1,\n      \"position\": [1320, 400]\n    }\n  ],\n  \"pinData\": {},\n  \"connections\": {\n    \"daily-trigger\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"set-parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"webhook-reporting\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"set-parameters\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"set-parameters\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"get-cashflow\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"get-invoices\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"get-proposals\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get-cashflow\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"analyze-data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get-invoices\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"analyze-data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"get-proposals\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"analyze-data\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"analyze-data\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"generate-excel\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    },\n    \"generate-excel\": {\n      \"main\": [\n        [\n          {\n            \"node\": \"email-managers\",\n            \"type\": \"main\",\n            \"index\": 0\n          },\n          {\n            \"node\": \"log-execution\",\n            \"type\": \"main\",\n            \"index\": 0\n          }\n        ]\n      ]\n    }\n  },\n  \"active\": true,\n  \"settings\": {\n    \"executionOrder\": \"v1\"\n  },\n  \"versionId\": \"3\",\n  \"id\": \"3\",\n  \"meta\": {\n    \"templateCredsSetupCompleted\": true\n  },\n  \"tags\": []\n}